@page "/gridcolumnsearch"
@using Microsoft.AspNetCore.Components.QuickGrid

<PageTitle>QuickGrid</PageTitle>

<h3>QuickGrid - Column Search</h3>

<nav class="navbar navbar-expand-lg bg-body-tertiary" aria-label="breadcrumb">
    <div class="container-fluid">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="#">All Accounts</a></li>
            <li class="breadcrumb-item active" aria-current="page">Checking</li>
        </ol>
        <span class="d-flex">
            @DateTime.Now.ToString("D")
        </span>
    </div>
</nav>

<div class="my-2">
    <div class="search-box inline-block mr-4 my-1">
        <h3>Checking Account</h3>
    </div>
    <div class="inline-block my-1">
        <h5>Available Balance:</h5><h4>$4,217.48</h4>
    </div>
</div>

<div class="my-2">
    <div class="search-box inline-block mr-4 my-1">
        <input type="search" autofocus @bind="nameFilter" placeholder="Description name..." />
        <button>Search</button>
    </div>
</div>

<div class="grid" tabindex="-1">
    <QuickGrid Items="@FilteredTransactions" >
        <PropertyColumn Property="@(tx => tx.TransactionId)" Title="ID" Sortable="true" IsDefaultSortColumn="true" InitialSortDirection="SortDirection.Descending" />
        <PropertyColumn Property="@(tx => tx.Date)" Title="Date" Format="MMM-dd" Sortable="true"  />
        <PropertyColumn Title="Description" Property="@(tx => tx.Description)" Sortable="true">
            <ColumnOptions>
                <div class="search-box">
                    <input type="search" autofocus @bind="nameFilter" @bind:event="oninput" placeholder="Description name..." />
                </div>
            </ColumnOptions>
        </PropertyColumn>
        <PropertyColumn Property="@(tx => tx.Type)" Title="Type" Sortable="true" />        
        <PropertyColumn Property="@(tx => tx.Amount)" Title="Amount" Format="C2" Align="Align.Right"/>
        <PropertyColumn Property="@(tx => tx.Balance)" Title="Balance" Format="C2" Align="Align.Right" />
        <TemplateColumn Title="Actions">
            <button @onclick="@(() => ViewTx(context))">View</button>
        </TemplateColumn>
    </QuickGrid>
</div>

<div class="my-2">
    <div class="inline-block my-1">
        <strong>@message</strong>
    </div>
</div>

@code {
    IQueryable<Transaction>? transactions;
    Ranges dateFilter = 0;
    string nameFilter = string.Empty;
    string searchFilter = string.Empty;
    string message = string.Empty;
    int numResults;

    IQueryable<Transaction>? FilteredTransactions
    {
        get
        {
            return transactions?.Where(tx => tx.Description.Contains(nameFilter, StringComparison.CurrentCultureIgnoreCase));
        }
    }

    public record Transaction(int TransactionId, string Description, string Type, DateOnly Date, decimal Amount, decimal Balance);

    protected override async Task OnInitializedAsync()
    {
        transactions = (await GetData());
    }

    public async Task<IQueryable<Transaction>> GetData()
    {
        IQueryable<Transaction> tx = new[]
        {
            new Transaction(10890, "Bank of The World", "Withdrawal", new DateOnly(2022, 9, 13), -80m, 2745.32M),
            new Transaction(10891, "BART", "Debit", new DateOnly(2022, 9, 14), -20m, 2725.32m),
            new Transaction(10892, "The Cheese Board", "Debit", new DateOnly(2022, 9, 15), -11.05m, 2714.27m),
            new Transaction(10893, "Monterey Market", "Debit", new DateOnly(2022, 9, 15), -43.6m, 2670.67m),
            new Transaction(10894, "Bank of The World", "Deposit", new DateOnly(2022, 9, 15), 1711.68m, 4382.35m),
            new Transaction(10895, "Local 123", "Debit", new DateOnly(2022, 9, 16), -12.17m, 4307.18m),
            new Transaction(10896, "Check 465", "Check", new DateOnly(2022, 9, 17), -27.00m, 4343.18m),
            new Transaction(10897, "Bank of The World", "Withdrawal", new DateOnly(2022, 9, 17), -80.00m, 4263.18m),
            new Transaction(10898, "Bill's books", "Debit", new DateOnly(2022, 9, 19), -18.37m, 4244.81m),
            new Transaction(10899, "Balgreens", "Debit", new DateOnly(2022, 9, 20), -27.33m, 4217.48m)
    }.AsQueryable();

        return tx;
    }

    void ViewTx(Transaction tx) => message = $"You selected record {tx.TransactionId}.";

    enum Ranges : ushort
    {
        None = 0,
        Month = 1,
        Previous = 2        
    }
}